//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_Contract_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.aspnet_User), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.Contract), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_Building_SportsSociety", "SportsSociety", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.SportsSociety), "Building", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.Building), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_TeamLeague_League", "League", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.League), "TeamLeague", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.TeamLeague), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_Member_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.aspnet_User), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(_1188.SCMS.Web.Member), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_Country_member", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(_1188.SCMS.Web.Country), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.Member), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_MemberTeam_Member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.Member), "MemberTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.MemberTeam), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_EventTeam_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.Team), "EventTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.EventTeam), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_MemberTeam_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.Team), "MemberTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.MemberTeam), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_Team_SportsSociety", "SportsSociety", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.SportsSociety), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.Team), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_TeamLeague_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.Team), "TeamLeague", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.TeamLeague), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_VisitorCard_aspnet_Users", "aspnet_User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.aspnet_User), "VisitorCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.VisitorCard), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_Ticket_aspnet_Users", "aspnet_User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.aspnet_User), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.Ticket), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_EventTeam_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.Event), "EventTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.EventTeam), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_EventTicket_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.Event), "EventTicket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.EventTicket), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_EventTicket_Ticket", "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1188.SCMS.Web.Ticket), "EventTicket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.EventTicket), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_Ticket_PaymentMethod", "PaymentMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(_1188.SCMS.Web.PaymentMethod), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.Ticket), true)]
[assembly: EdmRelationshipAttribute("SportsTeamModel", "FK_Ticket_TicketType", "TicketType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(_1188.SCMS.Web.TicketType), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1188.SCMS.Web.Ticket), true)]

#endregion

namespace _1188.SCMS.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SportsTeamEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SportsTeamEntities object using the connection string found in the 'SportsTeamEntities' section of the application configuration file.
        /// </summary>
        public SportsTeamEntities() : base("name=SportsTeamEntities", "SportsTeamEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SportsTeamEntities object.
        /// </summary>
        public SportsTeamEntities(string connectionString) : base(connectionString, "SportsTeamEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SportsTeamEntities object.
        /// </summary>
        public SportsTeamEntities(EntityConnection connection) : base(connection, "SportsTeamEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_User> aspnet_User
        {
            get
            {
                if ((_aspnet_User == null))
                {
                    _aspnet_User = base.CreateObjectSet<aspnet_User>("aspnet_User");
                }
                return _aspnet_User;
            }
        }
        private ObjectSet<aspnet_User> _aspnet_User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Building> Buildings
        {
            get
            {
                if ((_Buildings == null))
                {
                    _Buildings = base.CreateObjectSet<Building>("Buildings");
                }
                return _Buildings;
            }
        }
        private ObjectSet<Building> _Buildings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contracts
        {
            get
            {
                if ((_Contracts == null))
                {
                    _Contracts = base.CreateObjectSet<Contract>("Contracts");
                }
                return _Contracts;
            }
        }
        private ObjectSet<Contract> _Contracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<League> Leagues
        {
            get
            {
                if ((_Leagues == null))
                {
                    _Leagues = base.CreateObjectSet<League>("Leagues");
                }
                return _Leagues;
            }
        }
        private ObjectSet<League> _Leagues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentMethod> PaymentMethods
        {
            get
            {
                if ((_PaymentMethods == null))
                {
                    _PaymentMethods = base.CreateObjectSet<PaymentMethod>("PaymentMethods");
                }
                return _PaymentMethods;
            }
        }
        private ObjectSet<PaymentMethod> _PaymentMethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportsSociety> SportsSocieties
        {
            get
            {
                if ((_SportsSocieties == null))
                {
                    _SportsSocieties = base.CreateObjectSet<SportsSociety>("SportsSocieties");
                }
                return _SportsSocieties;
            }
        }
        private ObjectSet<SportsSociety> _SportsSocieties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamLeague> TeamLeagues
        {
            get
            {
                if ((_TeamLeagues == null))
                {
                    _TeamLeagues = base.CreateObjectSet<TeamLeague>("TeamLeagues");
                }
                return _TeamLeagues;
            }
        }
        private ObjectSet<TeamLeague> _TeamLeagues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MemberTeam> MemberTeams
        {
            get
            {
                if ((_MemberTeams == null))
                {
                    _MemberTeams = base.CreateObjectSet<MemberTeam>("MemberTeams");
                }
                return _MemberTeams;
            }
        }
        private ObjectSet<MemberTeam> _MemberTeams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventTeam> EventTeams
        {
            get
            {
                if ((_EventTeams == null))
                {
                    _EventTeams = base.CreateObjectSet<EventTeam>("EventTeams");
                }
                return _EventTeams;
            }
        }
        private ObjectSet<EventTeam> _EventTeams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TicketType> TicketTypes
        {
            get
            {
                if ((_TicketTypes == null))
                {
                    _TicketTypes = base.CreateObjectSet<TicketType>("TicketTypes");
                }
                return _TicketTypes;
            }
        }
        private ObjectSet<TicketType> _TicketTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VisitorCard> VisitorCards
        {
            get
            {
                if ((_VisitorCards == null))
                {
                    _VisitorCards = base.CreateObjectSet<VisitorCard>("VisitorCards");
                }
                return _VisitorCards;
            }
        }
        private ObjectSet<VisitorCard> _VisitorCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventTicket> EventTickets
        {
            get
            {
                if ((_EventTickets == null))
                {
                    _EventTickets = base.CreateObjectSet<EventTicket>("EventTickets");
                }
                return _EventTickets;
            }
        }
        private ObjectSet<EventTicket> _EventTickets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ticket> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Ticket>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Ticket> _Tickets;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_User(aspnet_User aspnet_User)
        {
            base.AddObject("aspnet_User", aspnet_User);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Buildings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildings(Building building)
        {
            base.AddObject("Buildings", building);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContracts(Contract contract)
        {
            base.AddObject("Contracts", contract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leagues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeagues(League league)
        {
            base.AddObject("Leagues", league);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentMethods(PaymentMethod paymentMethod)
        {
            base.AddObject("PaymentMethods", paymentMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportsSocieties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportsSocieties(SportsSociety sportsSociety)
        {
            base.AddObject("SportsSocieties", sportsSociety);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamLeagues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamLeagues(TeamLeague teamLeague)
        {
            base.AddObject("TeamLeagues", teamLeague);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MemberTeams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberTeams(MemberTeam memberTeam)
        {
            base.AddObject("MemberTeams", memberTeam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTeams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTeams(EventTeam eventTeam)
        {
            base.AddObject("EventTeams", eventTeam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TicketTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTicketTypes(TicketType ticketType)
        {
            base.AddObject("TicketTypes", ticketType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VisitorCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVisitorCards(VisitorCard visitorCard)
        {
            base.AddObject("VisitorCards", visitorCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTickets(EventTicket eventTicket)
        {
            base.AddObject("EventTickets", eventTicket);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTickets(Ticket ticket)
        {
            base.AddObject("Tickets", ticket);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.ApplicationId = applicationId;
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="aspnet_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_User object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_User Createaspnet_User(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_User aspnet_User = new aspnet_User();
            aspnet_User.ApplicationId = applicationId;
            aspnet_User.UserId = userId;
            aspnet_User.UserName = userName;
            aspnet_User.LoweredUserName = loweredUserName;
            aspnet_User.IsAnonymous = isAnonymous;
            aspnet_User.LastActivityDate = lastActivityDate;
            return aspnet_User;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Contract_aspnet_Users", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("SportsTeamModel.FK_Contract_aspnet_Users", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("SportsTeamModel.FK_Contract_aspnet_Users", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Member_aspnet_Users", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("SportsTeamModel.FK_Member_aspnet_Users", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("SportsTeamModel.FK_Member_aspnet_Users", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("SportsTeamModel.FK_Member_aspnet_Users", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("SportsTeamModel.FK_Member_aspnet_Users", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_VisitorCard_aspnet_Users", "VisitorCard")]
        public EntityCollection<VisitorCard> VisitorCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VisitorCard>("SportsTeamModel.FK_VisitorCard_aspnet_Users", "VisitorCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VisitorCard>("SportsTeamModel.FK_VisitorCard_aspnet_Users", "VisitorCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Ticket_aspnet_Users", "Ticket")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("SportsTeamModel.FK_Ticket_aspnet_Users", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("SportsTeamModel.FK_Ticket_aspnet_Users", "Ticket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="Building")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Building : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Building object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sportSocietyID">Initial value of the SportSocietyID property.</param>
        public static Building CreateBuilding(global::System.Int32 id, global::System.Int32 sportSocietyID)
        {
            Building building = new Building();
            building.ID = id;
            building.SportSocietyID = sportSocietyID;
            return building;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportSocietyID
        {
            get
            {
                return _SportSocietyID;
            }
            set
            {
                OnSportSocietyIDChanging(value);
                ReportPropertyChanging("SportSocietyID");
                _SportSocietyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportSocietyID");
                OnSportSocietyIDChanged();
            }
        }
        private global::System.Int32 _SportSocietyID;
        partial void OnSportSocietyIDChanging(global::System.Int32 value);
        partial void OnSportSocietyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _Capacity;
        partial void OnCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SocietyIsOwner
        {
            get
            {
                return _SocietyIsOwner;
            }
            set
            {
                OnSocietyIsOwnerChanging(value);
                ReportPropertyChanging("SocietyIsOwner");
                _SocietyIsOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SocietyIsOwner");
                OnSocietyIsOwnerChanged();
            }
        }
        private Nullable<global::System.Boolean> _SocietyIsOwner;
        partial void OnSocietyIsOwnerChanging(Nullable<global::System.Boolean> value);
        partial void OnSocietyIsOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedValue
        {
            get
            {
                return _EstimatedValue;
            }
            set
            {
                OnEstimatedValueChanging(value);
                ReportPropertyChanging("EstimatedValue");
                _EstimatedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedValue");
                OnEstimatedValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedValue;
        partial void OnEstimatedValueChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MonthlyCost
        {
            get
            {
                return _MonthlyCost;
            }
            set
            {
                OnMonthlyCostChanging(value);
                ReportPropertyChanging("MonthlyCost");
                _MonthlyCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthlyCost");
                OnMonthlyCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _MonthlyCost;
        partial void OnMonthlyCostChanging(Nullable<global::System.Decimal> value);
        partial void OnMonthlyCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Building_SportsSociety", "SportsSociety")]
        public SportsSociety SportsSociety
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportsSociety>("SportsTeamModel.FK_Building_SportsSociety", "SportsSociety").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportsSociety>("SportsTeamModel.FK_Building_SportsSociety", "SportsSociety").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportsSociety> SportsSocietyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportsSociety>("SportsTeamModel.FK_Building_SportsSociety", "SportsSociety");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportsSociety>("SportsTeamModel.FK_Building_SportsSociety", "SportsSociety", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="contractType">Initial value of the ContractType property.</param>
        /// <param name="expiralDate">Initial value of the ExpiralDate property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        public static Contract CreateContract(global::System.Int32 id, global::System.Guid userID, global::System.String contractType, global::System.DateTime expiralDate, global::System.Decimal salary)
        {
            Contract contract = new Contract();
            contract.ID = id;
            contract.UserID = userID;
            contract.ContractType = contractType;
            contract.ExpiralDate = expiralDate;
            contract.Salary = salary;
            return contract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContractType
        {
            get
            {
                return _ContractType;
            }
            set
            {
                OnContractTypeChanging(value);
                ReportPropertyChanging("ContractType");
                _ContractType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContractType");
                OnContractTypeChanged();
            }
        }
        private global::System.String _ContractType;
        partial void OnContractTypeChanging(global::System.String value);
        partial void OnContractTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpiralDate
        {
            get
            {
                return _ExpiralDate;
            }
            set
            {
                OnExpiralDateChanging(value);
                ReportPropertyChanging("ExpiralDate");
                _ExpiralDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiralDate");
                OnExpiralDateChanged();
            }
        }
        private global::System.DateTime _ExpiralDate;
        partial void OnExpiralDateChanging(global::System.DateTime value);
        partial void OnExpiralDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private global::System.Decimal _Salary;
        partial void OnSalaryChanging(global::System.Decimal value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TransferClause
        {
            get
            {
                return _TransferClause;
            }
            set
            {
                OnTransferClauseChanging(value);
                ReportPropertyChanging("TransferClause");
                _TransferClause = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferClause");
                OnTransferClauseChanged();
            }
        }
        private Nullable<global::System.Boolean> _TransferClause;
        partial void OnTransferClauseChanging(Nullable<global::System.Boolean> value);
        partial void OnTransferClauseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TransferAmount
        {
            get
            {
                return _TransferAmount;
            }
            set
            {
                OnTransferAmountChanging(value);
                ReportPropertyChanging("TransferAmount");
                _TransferAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferAmount");
                OnTransferAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _TransferAmount;
        partial void OnTransferAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnTransferAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> OneYearClausePlayer
        {
            get
            {
                return _OneYearClausePlayer;
            }
            set
            {
                OnOneYearClausePlayerChanging(value);
                ReportPropertyChanging("OneYearClausePlayer");
                _OneYearClausePlayer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OneYearClausePlayer");
                OnOneYearClausePlayerChanged();
            }
        }
        private Nullable<global::System.Boolean> _OneYearClausePlayer;
        partial void OnOneYearClausePlayerChanging(Nullable<global::System.Boolean> value);
        partial void OnOneYearClausePlayerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> OneYearClauseTeam
        {
            get
            {
                return _OneYearClauseTeam;
            }
            set
            {
                OnOneYearClauseTeamChanging(value);
                ReportPropertyChanging("OneYearClauseTeam");
                _OneYearClauseTeam = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OneYearClauseTeam");
                OnOneYearClauseTeamChanged();
            }
        }
        private Nullable<global::System.Boolean> _OneYearClauseTeam;
        partial void OnOneYearClauseTeamChanging(Nullable<global::System.Boolean> value);
        partial void OnOneYearClauseTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private Nullable<global::System.Boolean> _Apartment;
        partial void OnApartmentChanging(Nullable<global::System.Boolean> value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Car
        {
            get
            {
                return _Car;
            }
            set
            {
                OnCarChanging(value);
                ReportPropertyChanging("Car");
                _Car = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Car");
                OnCarChanged();
            }
        }
        private Nullable<global::System.Boolean> _Car;
        partial void OnCarChanging(Nullable<global::System.Boolean> value);
        partial void OnCarChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Contract_aspnet_Users", "aspnet_Users")]
        public aspnet_User aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_Contract_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_Contract_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_User> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_Contract_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_User>("SportsTeamModel.FK_Contract_aspnet_Users", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String countryName)
        {
            Country country = new Country();
            country.ID = id;
            country.CountryName = countryName;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Country_member", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("SportsTeamModel.FK_Country_member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("SportsTeamModel.FK_Country_member", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateStart">Initial value of the DateStart property.</param>
        /// <param name="dateEnd">Initial value of the DateEnd property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isPostponed">Initial value of the IsPostponed property.</param>
        /// <param name="isCancelled">Initial value of the IsCancelled property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="availableTickets">Initial value of the AvailableTickets property.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.String name, global::System.DateTime dateStart, global::System.DateTime dateEnd, global::System.String description, global::System.Boolean isPostponed, global::System.Boolean isCancelled, global::System.Boolean isDeleted, global::System.Int32 availableTickets)
        {
            Event @event = new Event();
            @event.ID = id;
            @event.Name = name;
            @event.DateStart = dateStart;
            @event.DateEnd = dateEnd;
            @event.Description = description;
            @event.IsPostponed = isPostponed;
            @event.IsCancelled = isCancelled;
            @event.IsDeleted = isDeleted;
            @event.AvailableTickets = availableTickets;
            return @event;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private global::System.DateTime _DateStart;
        partial void OnDateStartChanging(global::System.DateTime value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private global::System.DateTime _DateEnd;
        partial void OnDateEndChanging(global::System.DateTime value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPostponed
        {
            get
            {
                return _IsPostponed;
            }
            set
            {
                OnIsPostponedChanging(value);
                ReportPropertyChanging("IsPostponed");
                _IsPostponed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPostponed");
                OnIsPostponedChanged();
            }
        }
        private global::System.Boolean _IsPostponed;
        partial void OnIsPostponedChanging(global::System.Boolean value);
        partial void OnIsPostponedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCancelled
        {
            get
            {
                return _IsCancelled;
            }
            set
            {
                OnIsCancelledChanging(value);
                ReportPropertyChanging("IsCancelled");
                _IsCancelled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCancelled");
                OnIsCancelledChanged();
            }
        }
        private global::System.Boolean _IsCancelled;
        partial void OnIsCancelledChanging(global::System.Boolean value);
        partial void OnIsCancelledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AvailableTickets
        {
            get
            {
                return _AvailableTickets;
            }
            set
            {
                OnAvailableTicketsChanging(value);
                ReportPropertyChanging("AvailableTickets");
                _AvailableTickets = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvailableTickets");
                OnAvailableTicketsChanged();
            }
        }
        private global::System.Int32 _AvailableTickets;
        partial void OnAvailableTicketsChanging(global::System.Int32 value);
        partial void OnAvailableTicketsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_EventTeam_Event", "EventTeam")]
        public EntityCollection<EventTeam> EventTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTeam>("SportsTeamModel.FK_EventTeam_Event", "EventTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTeam>("SportsTeamModel.FK_EventTeam_Event", "EventTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_EventTicket_Event", "EventTicket")]
        public EntityCollection<EventTicket> EventTickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTicket>("SportsTeamModel.FK_EventTicket_Event", "EventTicket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTicket>("SportsTeamModel.FK_EventTicket_Event", "EventTicket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="EventTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventTeam object.
        /// </summary>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        public static EventTeam CreateEventTeam(global::System.Int32 eventID, global::System.Int32 teamID)
        {
            EventTeam eventTeam = new EventTeam();
            eventTeam.EventID = eventID;
            eventTeam.TeamID = teamID;
            return eventTeam;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                if (_TeamID != value)
                {
                    OnTeamIDChanging(value);
                    ReportPropertyChanging("TeamID");
                    _TeamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamID");
                    OnTeamIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_EventTeam_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SportsTeamModel.FK_EventTeam_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SportsTeamModel.FK_EventTeam_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SportsTeamModel.FK_EventTeam_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SportsTeamModel.FK_EventTeam_Team", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_EventTeam_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SportsTeamModel.FK_EventTeam_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SportsTeamModel.FK_EventTeam_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SportsTeamModel.FK_EventTeam_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("SportsTeamModel.FK_EventTeam_Event", "Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="EventTicket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventTicket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventTicket object.
        /// </summary>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="ticketID">Initial value of the TicketID property.</param>
        public static EventTicket CreateEventTicket(global::System.Int32 eventID, global::System.Int32 ticketID)
        {
            EventTicket eventTicket = new EventTicket();
            eventTicket.EventID = eventID;
            eventTicket.TicketID = ticketID;
            return eventTicket;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketID
        {
            get
            {
                return _TicketID;
            }
            set
            {
                if (_TicketID != value)
                {
                    OnTicketIDChanging(value);
                    ReportPropertyChanging("TicketID");
                    _TicketID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TicketID");
                    OnTicketIDChanged();
                }
            }
        }
        private global::System.Int32 _TicketID;
        partial void OnTicketIDChanging(global::System.Int32 value);
        partial void OnTicketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_EventTicket_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SportsTeamModel.FK_EventTicket_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SportsTeamModel.FK_EventTicket_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SportsTeamModel.FK_EventTicket_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("SportsTeamModel.FK_EventTicket_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_EventTicket_Ticket", "Ticket")]
        public Ticket Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("SportsTeamModel.FK_EventTicket_Ticket", "Ticket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("SportsTeamModel.FK_EventTicket_Ticket", "Ticket").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> TicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("SportsTeamModel.FK_EventTicket_Ticket", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("SportsTeamModel.FK_EventTicket_Ticket", "Ticket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="League")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class League : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new League object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static League CreateLeague(global::System.Int32 id, global::System.String name)
        {
            League league = new League();
            league.ID = id;
            league.Name = name;
            return league;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_TeamLeague_League", "TeamLeague")]
        public EntityCollection<TeamLeague> TeamLeagues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamLeague>("SportsTeamModel.FK_TeamLeague_League", "TeamLeague");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamLeague>("SportsTeamModel.FK_TeamLeague_League", "TeamLeague", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        public static Member CreateMember(global::System.Int32 id, global::System.Guid userID, global::System.String name, global::System.String surname)
        {
            Member member = new Member();
            member.ID = id;
            member.UserID = userID;
            member.Name = name;
            member.Surname = surname;
            return member;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nickname
        {
            get
            {
                return _Nickname;
            }
            set
            {
                OnNicknameChanging(value);
                ReportPropertyChanging("Nickname");
                _Nickname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nickname");
                OnNicknameChanged();
            }
        }
        private global::System.String _Nickname;
        partial void OnNicknameChanging(global::System.String value);
        partial void OnNicknameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthdate;
        partial void OnBirthdateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _PostalCode;
        partial void OnPostalCodeChanging(Nullable<global::System.Int32> value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkPhone
        {
            get
            {
                return _WorkPhone;
            }
            set
            {
                OnWorkPhoneChanging(value);
                ReportPropertyChanging("WorkPhone");
                _WorkPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkPhone");
                OnWorkPhoneChanged();
            }
        }
        private global::System.String _WorkPhone;
        partial void OnWorkPhoneChanging(global::System.String value);
        partial void OnWorkPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Member_aspnet_Users", "aspnet_Users")]
        public aspnet_User aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_Member_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_Member_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_User> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_Member_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_User>("SportsTeamModel.FK_Member_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Country_member", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("SportsTeamModel.FK_Country_member", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("SportsTeamModel.FK_Country_member", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("SportsTeamModel.FK_Country_member", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("SportsTeamModel.FK_Country_member", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_MemberTeam_Member", "MemberTeam")]
        public EntityCollection<MemberTeam> MemberTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MemberTeam>("SportsTeamModel.FK_MemberTeam_Member", "MemberTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MemberTeam>("SportsTeamModel.FK_MemberTeam_Member", "MemberTeam", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="MemberTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MemberTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MemberTeam object.
        /// </summary>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static MemberTeam CreateMemberTeam(global::System.Guid memberID, global::System.Int32 teamID, global::System.Int32 year)
        {
            MemberTeam memberTeam = new MemberTeam();
            memberTeam.MemberID = memberID;
            memberTeam.TeamID = teamID;
            memberTeam.Year = year;
            return memberTeam;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                if (_MemberID != value)
                {
                    OnMemberIDChanging(value);
                    ReportPropertyChanging("MemberID");
                    _MemberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberID");
                    OnMemberIDChanged();
                }
            }
        }
        private global::System.Guid _MemberID;
        partial void OnMemberIDChanging(global::System.Guid value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                if (_TeamID != value)
                {
                    OnTeamIDChanging(value);
                    ReportPropertyChanging("TeamID");
                    _TeamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamID");
                    OnTeamIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                if (_Year != value)
                {
                    OnYearChanging(value);
                    ReportPropertyChanging("Year");
                    _Year = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Year");
                    OnYearChanged();
                }
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_MemberTeam_Member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("SportsTeamModel.FK_MemberTeam_Member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("SportsTeamModel.FK_MemberTeam_Member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("SportsTeamModel.FK_MemberTeam_Member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("SportsTeamModel.FK_MemberTeam_Member", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_MemberTeam_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SportsTeamModel.FK_MemberTeam_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SportsTeamModel.FK_MemberTeam_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SportsTeamModel.FK_MemberTeam_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SportsTeamModel.FK_MemberTeam_Team", "Team", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="to">Initial value of the To property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Message CreateMessage(global::System.Int32 id, global::System.String from, global::System.String to, global::System.DateTime timeStamp, global::System.Boolean isDeleted)
        {
            Message message = new Message();
            message.ID = id;
            message.From = from;
            message.To = to;
            message.TimeStamp = timeStamp;
            message.IsDeleted = isDeleted;
            return message;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.String _From;
        partial void OnFromChanging(global::System.String value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private global::System.String _To;
        partial void OnToChanging(global::System.String value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="PaymentMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentMethod object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="method">Initial value of the Method property.</param>
        public static PaymentMethod CreatePaymentMethod(global::System.Int32 id, global::System.String method)
        {
            PaymentMethod paymentMethod = new PaymentMethod();
            paymentMethod.ID = id;
            paymentMethod.Method = method;
            return paymentMethod;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Ticket_PaymentMethod", "Ticket")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("SportsTeamModel.FK_Ticket_PaymentMethod", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("SportsTeamModel.FK_Ticket_PaymentMethod", "Ticket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="SportsSociety")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportsSociety : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportsSociety object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SportsSociety CreateSportsSociety(global::System.Int32 id, global::System.String name)
        {
            SportsSociety sportsSociety = new SportsSociety();
            sportsSociety.ID = id;
            sportsSociety.Name = name;
            return sportsSociety;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Building_SportsSociety", "Building")]
        public EntityCollection<Building> Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Building>("SportsTeamModel.FK_Building_SportsSociety", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Building>("SportsTeamModel.FK_Building_SportsSociety", "Building", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Team_SportsSociety", "Team")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("SportsTeamModel.FK_Team_SportsSociety", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("SportsTeamModel.FK_Team_SportsSociety", "Team", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sportSocietyID">Initial value of the SportSocietyID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Team CreateTeam(global::System.Int32 id, global::System.Int32 sportSocietyID, global::System.String name, global::System.Boolean isActive)
        {
            Team team = new Team();
            team.ID = id;
            team.SportSocietyID = sportSocietyID;
            team.Name = name;
            team.IsActive = isActive;
            return team;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportSocietyID
        {
            get
            {
                return _SportSocietyID;
            }
            set
            {
                OnSportSocietyIDChanging(value);
                ReportPropertyChanging("SportSocietyID");
                _SportSocietyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportSocietyID");
                OnSportSocietyIDChanged();
            }
        }
        private global::System.Int32 _SportSocietyID;
        partial void OnSportSocietyIDChanging(global::System.Int32 value);
        partial void OnSportSocietyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportType
        {
            get
            {
                return _SportType;
            }
            set
            {
                OnSportTypeChanging(value);
                ReportPropertyChanging("SportType");
                _SportType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportType");
                OnSportTypeChanged();
            }
        }
        private global::System.String _SportType;
        partial void OnSportTypeChanging(global::System.String value);
        partial void OnSportTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayersCount
        {
            get
            {
                return _PlayersCount;
            }
            set
            {
                OnPlayersCountChanging(value);
                ReportPropertyChanging("PlayersCount");
                _PlayersCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayersCount");
                OnPlayersCountChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayersCount;
        partial void OnPlayersCountChanging(Nullable<global::System.Int32> value);
        partial void OnPlayersCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> YearFounded
        {
            get
            {
                return _YearFounded;
            }
            set
            {
                OnYearFoundedChanging(value);
                ReportPropertyChanging("YearFounded");
                _YearFounded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearFounded");
                OnYearFoundedChanged();
            }
        }
        private Nullable<global::System.Int16> _YearFounded;
        partial void OnYearFoundedChanging(Nullable<global::System.Int16> value);
        partial void OnYearFoundedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_EventTeam_Team", "EventTeam")]
        public EntityCollection<EventTeam> EventTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTeam>("SportsTeamModel.FK_EventTeam_Team", "EventTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTeam>("SportsTeamModel.FK_EventTeam_Team", "EventTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_MemberTeam_Team", "MemberTeam")]
        public EntityCollection<MemberTeam> MemberTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MemberTeam>("SportsTeamModel.FK_MemberTeam_Team", "MemberTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MemberTeam>("SportsTeamModel.FK_MemberTeam_Team", "MemberTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Team_SportsSociety", "SportsSociety")]
        public SportsSociety SportsSociety
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportsSociety>("SportsTeamModel.FK_Team_SportsSociety", "SportsSociety").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportsSociety>("SportsTeamModel.FK_Team_SportsSociety", "SportsSociety").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportsSociety> SportsSocietyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportsSociety>("SportsTeamModel.FK_Team_SportsSociety", "SportsSociety");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportsSociety>("SportsTeamModel.FK_Team_SportsSociety", "SportsSociety", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_TeamLeague_Team", "TeamLeague")]
        public EntityCollection<TeamLeague> TeamLeagues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamLeague>("SportsTeamModel.FK_TeamLeague_Team", "TeamLeague");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamLeague>("SportsTeamModel.FK_TeamLeague_Team", "TeamLeague", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="TeamLeague")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamLeague : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamLeague object.
        /// </summary>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static TeamLeague CreateTeamLeague(global::System.Int32 teamID, global::System.Int32 leagueID, global::System.Int16 year)
        {
            TeamLeague teamLeague = new TeamLeague();
            teamLeague.TeamID = teamID;
            teamLeague.LeagueID = leagueID;
            teamLeague.Year = year;
            return teamLeague;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                if (_TeamID != value)
                {
                    OnTeamIDChanging(value);
                    ReportPropertyChanging("TeamID");
                    _TeamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamID");
                    OnTeamIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                if (_LeagueID != value)
                {
                    OnLeagueIDChanging(value);
                    ReportPropertyChanging("LeagueID");
                    _LeagueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueID");
                    OnLeagueIDChanged();
                }
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                if (_Year != value)
                {
                    OnYearChanging(value);
                    ReportPropertyChanging("Year");
                    _Year = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Year");
                    OnYearChanged();
                }
            }
        }
        private global::System.Int16 _Year;
        partial void OnYearChanging(global::System.Int16 value);
        partial void OnYearChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_TeamLeague_League", "League")]
        public League League
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("SportsTeamModel.FK_TeamLeague_League", "League").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("SportsTeamModel.FK_TeamLeague_League", "League").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<League> LeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("SportsTeamModel.FK_TeamLeague_League", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<League>("SportsTeamModel.FK_TeamLeague_League", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_TeamLeague_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SportsTeamModel.FK_TeamLeague_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SportsTeamModel.FK_TeamLeague_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SportsTeamModel.FK_TeamLeague_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SportsTeamModel.FK_TeamLeague_Team", "Team", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isAlreadyChecked">Initial value of the IsAlreadyChecked property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Ticket CreateTicket(global::System.Int32 id, global::System.Boolean isAlreadyChecked, global::System.Guid userID)
        {
            Ticket ticket = new Ticket();
            ticket.ID = id;
            ticket.IsAlreadyChecked = isAlreadyChecked;
            ticket.UserID = userID;
            return ticket;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAlreadyChecked
        {
            get
            {
                return _IsAlreadyChecked;
            }
            set
            {
                OnIsAlreadyCheckedChanging(value);
                ReportPropertyChanging("IsAlreadyChecked");
                _IsAlreadyChecked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAlreadyChecked");
                OnIsAlreadyCheckedChanged();
            }
        }
        private global::System.Boolean _IsAlreadyChecked;
        partial void OnIsAlreadyCheckedChanging(global::System.Boolean value);
        partial void OnIsAlreadyCheckedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TicketTypeID
        {
            get
            {
                return _TicketTypeID;
            }
            set
            {
                OnTicketTypeIDChanging(value);
                ReportPropertyChanging("TicketTypeID");
                _TicketTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketTypeID");
                OnTicketTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TicketTypeID;
        partial void OnTicketTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnTicketTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> SeatNumber
        {
            get
            {
                return _SeatNumber;
            }
            set
            {
                OnSeatNumberChanging(value);
                ReportPropertyChanging("SeatNumber");
                _SeatNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeatNumber");
                OnSeatNumberChanged();
            }
        }
        private Nullable<global::System.Int16> _SeatNumber;
        partial void OnSeatNumberChanging(Nullable<global::System.Int16> value);
        partial void OnSeatNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentMethodID
        {
            get
            {
                return _PaymentMethodID;
            }
            set
            {
                OnPaymentMethodIDChanging(value);
                ReportPropertyChanging("PaymentMethodID");
                _PaymentMethodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentMethodID");
                OnPaymentMethodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentMethodID;
        partial void OnPaymentMethodIDChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentMethodIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Ticket_aspnet_Users", "aspnet_User")]
        public aspnet_User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_Ticket_aspnet_Users", "aspnet_User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_Ticket_aspnet_Users", "aspnet_User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_Ticket_aspnet_Users", "aspnet_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_User>("SportsTeamModel.FK_Ticket_aspnet_Users", "aspnet_User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_EventTicket_Ticket", "EventTicket")]
        public EntityCollection<EventTicket> EventTickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTicket>("SportsTeamModel.FK_EventTicket_Ticket", "EventTicket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTicket>("SportsTeamModel.FK_EventTicket_Ticket", "EventTicket", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Ticket_PaymentMethod", "PaymentMethod")]
        public PaymentMethod PaymentMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("SportsTeamModel.FK_Ticket_PaymentMethod", "PaymentMethod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("SportsTeamModel.FK_Ticket_PaymentMethod", "PaymentMethod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentMethod> PaymentMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("SportsTeamModel.FK_Ticket_PaymentMethod", "PaymentMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentMethod>("SportsTeamModel.FK_Ticket_PaymentMethod", "PaymentMethod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Ticket_TicketType", "TicketType")]
        public TicketType TicketType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketType>("SportsTeamModel.FK_Ticket_TicketType", "TicketType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketType>("SportsTeamModel.FK_Ticket_TicketType", "TicketType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TicketType> TicketTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketType>("SportsTeamModel.FK_Ticket_TicketType", "TicketType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TicketType>("SportsTeamModel.FK_Ticket_TicketType", "TicketType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="TicketType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static TicketType CreateTicketType(global::System.Int32 id, global::System.String typeName, global::System.Decimal price)
        {
            TicketType ticketType = new TicketType();
            ticketType.ID = id;
            ticketType.TypeName = typeName;
            ticketType.Price = price;
            return ticketType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_Ticket_TicketType", "Ticket")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("SportsTeamModel.FK_Ticket_TicketType", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("SportsTeamModel.FK_Ticket_TicketType", "Ticket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsTeamModel", Name="VisitorCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VisitorCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VisitorCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="isAllowedAccess">Initial value of the IsAllowedAccess property.</param>
        public static VisitorCard CreateVisitorCard(global::System.Int32 id, global::System.Guid userID, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Boolean isAllowedAccess)
        {
            VisitorCard visitorCard = new VisitorCard();
            visitorCard.ID = id;
            visitorCard.UserID = userID;
            visitorCard.StartTime = startTime;
            visitorCard.EndTime = endTime;
            visitorCard.IsAllowedAccess = isAllowedAccess;
            return visitorCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAllowedAccess
        {
            get
            {
                return _IsAllowedAccess;
            }
            set
            {
                OnIsAllowedAccessChanging(value);
                ReportPropertyChanging("IsAllowedAccess");
                _IsAllowedAccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAllowedAccess");
                OnIsAllowedAccessChanged();
            }
        }
        private global::System.Boolean _IsAllowedAccess;
        partial void OnIsAllowedAccessChanging(global::System.Boolean value);
        partial void OnIsAllowedAccessChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsTeamModel", "FK_VisitorCard_aspnet_Users", "aspnet_User")]
        public aspnet_User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_VisitorCard_aspnet_Users", "aspnet_User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_VisitorCard_aspnet_Users", "aspnet_User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("SportsTeamModel.FK_VisitorCard_aspnet_Users", "aspnet_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_User>("SportsTeamModel.FK_VisitorCard_aspnet_Users", "aspnet_User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
